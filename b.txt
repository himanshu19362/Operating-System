-> User Mode : Environment where code has restricted access to hardware .
-> Kernel Mode : Environment where code has complete access to the hardware .

-> User Space : A set of memory locations where normal processes run . Here , processes have limited access to memory.
-> Kernel Space : Set of memory locations where kernel is stored .

Kernel :  It is a computer program which has control to the hardware .

Functions Of Kernel:

-> Process management : It handles process creation , termination etc . It also schedules processes and threads. It also enables communication between two processes.

-> Memory Management : Handles how memory will be allocated/deallocated . 

-> File Management : Creates/Deletes file. Also handles directory management.

-> I/O Management : Manages all I/O operations . For eg: entering a pen drive or USB Cable or connecting a game controller with laptop.

Interrupt : It is a signal generated by a hardware or software when a process or an event needs special attention .

Types of Kernel:

-> Monolithic Kernel : All the 4 above functions are done by the kernel . So , fast communication among these functionalities .
   Kernel is bulky as all code resides in kernel .
   Less reliable . Lets say that the code for memory management is corrupted , then the whole kernel with be affected . Strongly coupled.
   Eg: Linux , Unix , MS DOS.

-> Micro Kernel : Here , only those functions that have high hardware interaction are stored in kernel space. Rest functions are implemented in User Space.
   Performance will be slow because switching between user and kernel mode will increase . 
   User Space handles I/O and File Management and kernel handles rest 2 .
   More reliable as it is losely coupled . Kernel will be less bulky.
   Eg: L4 Linux , Symbian OS.

-> Hybrid Kernel : User Space handles file management and Kernel Space handles rest 3.
   Eg: Windows 7+ , MacOS.    


System Calls :

-> System Calls are functions that can be invoked by user and they invoke the corresponding functions in the kernel that helps us access 
   hardware or other resources. 

-> Process in user space generally don't have access to kernel space . Processes in user space have access to a small part of kernel called system calls .
   System Calls are interface exposed by kernel so that process in user space can interact with kernel .

-> When system call is invoked , system switches from user mode to kernel mode.

Types of System Calls:

-> Process Control : To start , end , load the process. Allocate and deallocate memory.

-> File Management : Handles file creation , deletion , open , close , read , write etc.

-> Communication Management : Handles interprocess communication like creating and deleting communication connection , send and receive messages.

-> Information Management : get and set time and date , get or set process , file and devices.

-> Device Management : Logically attach and detach devices. Request and release device. 

